import mss
import numpy as np
import screen_brightness_control as sbc
import tkinter as tk

# Function to adjust brightness
def adjust_brightness(white_ratio):
    try:
        if 80 <= white_ratio <= 99:
            new_brightness = 20
        elif 65 <= white_ratio < 80:
            new_brightness = 30
        elif 50 <= white_ratio < 65:
            new_brightness = 45
        elif 20 <= white_ratio < 50:
            new_brightness = 50
        else:
            new_brightness = 75

        sbc.set_brightness(new_brightness)
        print(f"Brightness set to: %{new_brightness}")
    except Exception as e:
        print(f"Failed to set brightness: {e}")

# Function to calculate white pixel ratio
def calculate_white_ratio():
    with mss.mss() as sct:
        screenshot = sct.grab(sct.monitors[1])
        img = np.array(screenshot)[:, :, :3]
        white_pixels = np.sum(np.all(img >= [220, 220, 220], axis=-1))
        total_pixels = img.shape[0] * img.shape[1]
        white_ratio = (white_pixels / total_pixels) * 100
        return white_ratio

# Function to update control interval
def update_interval(value):
    global control_interval
    options = [0.5, 1, 3, 5]
    closest = min(options, key=lambda x: abs(x - float(value)))
    control_interval = int(closest * 1000)
    interval_label.config(text=f"Control Interval: {closest}s")

# Function to monitor brightness
def monitor_brightness():
    if state:
        white_ratio = calculate_white_ratio()
        print(f"White pixel ratio on screen: %{white_ratio:.2f}")
        adjust_brightness(white_ratio)
        root.after(control_interval, monitor_brightness)

# Toggle button function
def toggle():
    global state
    state = not state
    color = "#4CAF50" if state else "#ccc"
    text = "On" if state else "Off"
    canvas.itemconfig(bg_rect, fill=color)
    label.config(text=text, fg=color)
    x_start = 5 if state else 35
    x_end = 35 if state else 5
    for i in range(10):
        x = x_start + (x_end - x_start) * (i / 10)
        root.update_idletasks()
        canvas.coords(circle, x, 5, x + 25, 30)
        root.after(10)
    if state:
        monitor_brightness()

# Tkinter UI Setup
root = tk.Tk()
root.title("Brightness Control")
state = False
control_interval = 1000  # Default to 1 second

canvas = tk.Canvas(root, width=65, height=35, bg="white", highlightthickness=0)
canvas.pack(pady=10)
bg_rect = canvas.create_rectangle(2, 2, 63, 33, fill="#ccc", outline="")
circle = canvas.create_oval(5, 5, 30, 30, fill="white", outline="")
canvas.bind("<Button-1>", lambda event: toggle())
label = tk.Label(root, text="Off", font=("Arial", 12, "bold"), fg="#ccc")
label.pack()

# Slider to control interval
slider = tk.Scale(root, from_=0.5, to=5, resolution=0.1, orient="horizontal", length=300, command=update_interval)
slider.set(1)
slider.pack()
interval_label = tk.Label(root, text="Control Interval: 1s", font=("Arial", 12))
interval_label.pack()

root.mainloop()
